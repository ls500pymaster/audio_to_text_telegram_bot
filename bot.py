import osimport telebotimport requestsimport subprocessimport datetimeimport speech_recognition as srfrom config import TG_TOKENlogfile = str(datetime.date.today()) + ".log"token = TG_TOKENbot = telebot.TeleBot(token)@bot.message_handler(commands=["start"])def cmd_start(message):    bot.send_message(message.chat.id, "Привет! Этот бот умеет извлекать текст из аудиофайлов. Отправь мне файл до 20 Мб.")@bot.message_handler(commands=["reset"])def cmd_reset(message):    bot.send_message(message.chat.id, "Что ж, начнём по-новой. Перешли мне аудио файл до 20 Мб.")def audio_to_text(dest_name: str):# Def audio to text    r = sr.Recognizer()    # Reading .wav file    message = sr.AudioFile(dest_name)    with message as source:        audio = r.record(source)    result = r.recognize_google(audio, language="ru_RU") # Language recognition    return result@bot.message_handler(content_types=['voice'])def get_audio_messages(message):# Get audio    try:        print("Started recognition...")        # Name of file        file_info = bot.get_file(message.voice.file_id)        path = os.path.splitext(file_info.file_path)[0] # Full path to the file        fname = os.path.basename(path) # Path to name of file        doc = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token, file_info.file_path)) # Get audio file        with open(fname+'.oga', 'wb') as f:            f.write(doc.content) # Saving audio        process = subprocess.run(['ffmpeg', '-i', fname+'.oga', fname+'.wav'])# ffmpeg for converting        result = audio_to_text(fname+'.wav') # Audio to text        bot.send_message(message.from_user.id, format(result)) # Send text    except sr.UnknownValueError as e:        # Value error unknown text        bot.send_message(message.from_user.id,  "Не удалось извлечь текст или аудио сообщение пустое.")        with open(logfile, 'a', encoding='utf-8') as f:            f.write(str(datetime.datetime.today().strftime("%H:%M:%S")) + ':' + str(message.from_user.id) + ':' + str(message.from_user.first_name) + '_' + str(message.from_user.last_name) + ':' + str(message.from_user.username) +':'+ str(message.from_user.language_code) + ':Message is empty.\n')    except Exception as e:        # Exception error        bot.send_message(message.from_user.id,  "Ошибка. Свяжитесь с администратором.")        with open(logfile, 'a', encoding='utf-8') as f:            f.write(str(datetime.datetime.today().strftime("%H:%M:%S")) + ':' + str(message.from_user.id) + ':' + str(message.from_user.first_name) + '_' + str(message.from_user.last_name) + ':' + str(message.from_user.username) +':'+ str(message.from_user.language_code) +':' + str(e) + '\n')    finally:        # Delete temporary files        os.remove(fname+'.wav')        os.remove(fname+'.oga')bot.polling(none_stop=True, interval=1)